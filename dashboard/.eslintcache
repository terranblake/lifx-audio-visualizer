[{"/Users/tblake/Documents/earney/react_dashboard/src/index.js":"1","/Users/tblake/Documents/earney/react_dashboard/src/App.js":"2","/Users/tblake/Documents/earney/react_dashboard/src/reportWebVitals.js":"3","/Users/tblake/Documents/earney/react_dashboard/src/panels/homePagePanel.js":"4","/Users/tblake/Documents/earney/react_dashboard/src/panels/tickersDiscoveryPanel.js":"5","/Users/tblake/Documents/earney/react_dashboard/src/panels/historicalPricingPanel.js":"6","/Users/tblake/Documents/earney/react_dashboard/src/panels/historicalEarningsPanel.js":"7","/Users/tblake/Documents/earney/react_dashboard/src/panels/tickersSelectionPanel.js":"8","/Users/tblake/Documents/earney/react_dashboard/src/panels/eventDiscoveryPanel.js":"9","/Users/tblake/Documents/earney/react_dashboard/src/components/RangedDatePicker.js":"10","/Users/tblake/Documents/earney/react_dashboard/src/panels/optionsDiscoveryPanel.js":"11","/Users/tblake/Documents/earney/react_dashboard/src/components/MultipleSelect.js":"12","/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/index.js":"13","/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/reportWebVitals.js":"14","/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/App.js":"15","/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/panels/homePagePanel.js":"16","/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/panels/powerFrequencyPanel.js":"17","/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/utils/socketio.js":"18"},{"size":500,"mtime":1608593991354,"results":"19","hashOfConfig":"20"},{"size":132,"mtime":1608593991355,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1608593991353,"results":"22","hashOfConfig":"20"},{"size":1457,"mtime":1608595602343,"results":"23","hashOfConfig":"20"},{"size":1864,"mtime":1608593991353,"results":"24","hashOfConfig":"20"},{"size":5827,"mtime":1608593991354,"results":"25","hashOfConfig":"20"},{"size":15892,"mtime":1608593991354,"results":"26","hashOfConfig":"20"},{"size":1336,"mtime":1608593991353,"results":"27","hashOfConfig":"20"},{"size":3698,"mtime":1608593991353,"results":"28","hashOfConfig":"20"},{"size":1925,"mtime":1608593991355,"results":"29","hashOfConfig":"20"},{"size":3917,"mtime":1608596360322,"results":"30","hashOfConfig":"20"},{"size":3168,"mtime":1608596332292,"results":"31","hashOfConfig":"20"},{"size":500,"mtime":1608840227843,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1608840227856,"results":"34","hashOfConfig":"33"},{"size":132,"mtime":1608840227836,"results":"35","hashOfConfig":"33"},{"size":599,"mtime":1608840911764,"results":"36","hashOfConfig":"33"},{"size":3711,"mtime":1608849356615,"results":"37","hashOfConfig":"33"},{"size":247,"mtime":1608939997454,"results":"38","hashOfConfig":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"177nr1q",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1omh3sr",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tblake/Documents/earney/react_dashboard/src/index.js",[],["82","83"],"/Users/tblake/Documents/earney/react_dashboard/src/App.js",[],"/Users/tblake/Documents/earney/react_dashboard/src/reportWebVitals.js",[],"/Users/tblake/Documents/earney/react_dashboard/src/panels/homePagePanel.js",[],"/Users/tblake/Documents/earney/react_dashboard/src/panels/tickersDiscoveryPanel.js",["84","85"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Box, Divider, InputBase, TextField, Paper } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { Search, Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 15,\n    padding: '2px 10px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 600,\n  },\n  input: {\n    width: '100%',\n    marginLeft: theme.spacing(1),\n    // flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  autoComplete: {\n    width: '75%'\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function TickersDiscoveryPanel() {\n  const classes = useStyles();\n  const [filteredTickers, setFilteredTickers] = useState([]);\n\n  return (\n    <Box display=\"flex\" width=\"100%\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\n      <Paper component=\"form\" className={classes.root}>\n        <Autocomplete\n          id=\"free-solo-demo\"\n          className={classes.autoComplete}\n          options={filteredTickers.map((option) => option.symbol)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              className={classes.input}\n              placeholder=\"Find symbols\"\n              InputProps={{\n                ...params.InputProps,\n                type: 'search',\n                'aria-label': 'find symbols'\n              }}\n            />\n          )}\n        />\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n          <Search />\n        </IconButton>\n        <Divider className={classes.divider} orientation=\"vertical\" />\n        <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"add\">\n          <Add />\n        </IconButton>\n      </Paper>\n    </Box>\n  );\n}","/Users/tblake/Documents/earney/react_dashboard/src/panels/historicalPricingPanel.js",[],"/Users/tblake/Documents/earney/react_dashboard/src/panels/historicalEarningsPanel.js",["86","87","88","89","90","91"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'symbol', numeric: false, disablePadding: true, label: 'Symbol' },\n    { id: 'date', numeric: false, disablePadding: false, label: 'Date' },\n    { id: 'revenuePerShare', numeric: true, disablePadding: true, label: 'revenuePerShare' },\n    { id: 'netIncomePerShare', numeric: true, disablePadding: true, label: 'netIncomePerShare' },\n    { id: 'cashPerShare', numeric: true, disablePadding: true, label: 'cashPerShare' },\n    { id: 'bookValuePerShare', numeric: true, disablePadding: true, label: 'bookValuePerShare' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {\n                                        order === 'desc'\n                                            ? 'sorted descending'\n                                            : 'sorted ascending'\n                                    }\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                        {/* Nutrition */}\n                    </Typography>\n                )}\n\n            {numSelected > 0 ? (\n                <div>\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\">\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Close\">\n                        <IconButton aria-label=\"Close\">\n                            <CloseIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            ) : (\n                    <Tooltip title=\"Filter list\">\n                        <IconButton aria-label=\"filter list\">\n                            <FilterListIcon />\n                        </IconButton>\n                    </Tooltip>\n                )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nconst ws = new WebSocket('ws://127.0.0.1:8001');\n\nexport default function HistoricalEarningsPanel() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('symbol');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(true);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const [rows, setRows] = React.useState([]);\n    const [columns, setColumns] = React.useState([]);\n    const [subscription, setSubscription] = React.useState({\n        command: 'earnings_comparison',\n        arguments: {\n            // get the last 3 of this document type\n            count: 3,\n            document_type: '10-q',\n            tickers: ['aapl', 'ddog', 'wmt'],\n            start: moment().subtract(1, 'week'),\n            end: moment()\n        }\n    });\n\n    const onOpen = (ws, event) => {\n        console.log('earnings socket opened', event);\n        ws.send(JSON.stringify(subscription))\n    }\n\n    const onMessage = (event) => {\n        console.log('earnings ', 'socket received message', event);\n        const data = JSON.parse(event.data);\n        const columns = data.length\n            ? Object.keys(data[0]).map(c => {\n                return {\n                    Header: c,\n                    accessor: c\n                };\n            })\n            : [];\n\n        setRows(data);\n        setColumns(columns);\n    }\n\n    const onClose = (event) => {\n        console.log('earnings ', 'socket closed', event);\n    }\n\n    ws.onopen = (e) => onOpen(ws, e);\n    ws.onclose = onClose;\n    ws.onmessage = onMessage;\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.symbol);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    const sortedRows = stableSort(rows, getComparator(order, orderBy))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {\n                                sortedRows.map((row, index) => {\n                                    const isItemSelected = isSelected(row.symbol);\n\n                                    let isDuplicateTicker = false;\n                                    if (index > 0)\n                                        isDuplicateTicker = sortedRows[index - 1].symbol == row.symbol;\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.symbol)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.symbol}\n                                            selected={isItemSelected}\n                                            width='30%'\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                {\n                                                    isDuplicateTicker\n                                                        ? <div></div>\n                                                        : <Checkbox\n                                                            checked={isItemSelected}\n                                                            inputProps={{ 'aria-labelledby': labelId }}\n                                                        />\n                                                }\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {\n                                                    isDuplicateTicker\n                                                        ? \"\"\n                                                        : row.symbol\n                                                }\n                                            </TableCell>\n                                            <TableCell style={{ whiteSpace: 'nowrap' }} align=\"right\">{row.date}</TableCell>\n                                            <TableCell align=\"right\">{row.revenuePerShare}</TableCell>\n                                            <TableCell align=\"right\">{row.netIncomePerShare}</TableCell>\n                                            <TableCell align=\"right\">{row.netIncomePerShare}</TableCell>\n                                            <TableCell align=\"right\">{row.cashPerShare}</TableCell>\n                                            <TableCell align=\"right\">{row.bookValuePerShare}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {/* <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Dense padding\"\n            /> */}\n        </div>\n    );\n}\n","/Users/tblake/Documents/earney/react_dashboard/src/panels/tickersSelectionPanel.js",["92"],"import React, { useState } from 'react';\nimport { Snackbar, Box } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nexport default function TickersSelectionPanel() {\n  const [state, setState] = useState({\n    open: false,\n    vertical: 'bottom',\n    horizontal: 'right',\n  });\n  const [tickers, setTickers] = useState(['aapl', 'wmt', 'ddog']);\n  const [selectedTickers, setSelectedTickers] = useState(['aapl']);\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  // propogate selected state up higher?\n  const handleTickersChange = (e, selected) => {\n    setSelectedTickers(selected);\n  }\n\n  const buttons = (\n    <ToggleButtonGroup\n      size=\"small\"\n      aria-label=\"ticker selection\"\n      value={selectedTickers}\n      onChange={handleTickersChange}\n    >\n      {\n        tickers.map(t => <ToggleButton value={t}>{t}</ToggleButton>)\n      }\n    </ToggleButtonGroup>\n  );\n\n  return (\n    <Box display=\"flex\" width=\"100%\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\n      {buttons}\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message=\"I love snacks\"\n        key={vertical + horizontal}\n      />\n    </Box>\n  );\n}","/Users/tblake/Documents/earney/react_dashboard/src/panels/eventDiscoveryPanel.js",["93"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport RangedDatePicker from '../components/RangedDatePicker';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}));\n\nexport default function EventDiscoveryPanel() {\n  const classes = useStyles();\n\n  const onSearch = (e) => {\n\n  }\n\n  return (\n    <Box display=\"flex\" width=\"100%\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\" className={classes.root}>\n      <Accordion style={{ width: '100%' }}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\"\n        >\n          <div className={classes.column}>\n            <Typography className={classes.heading}>Events</Typography>\n          </div>\n          <div className={classes.column}>\n            <Typography className={classes.secondaryHeading}>Select event type</Typography>\n          </div>\n          <div className={classes.column}>\n            <Typography className={classes.secondaryHeading}>Select date range</Typography>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails className={classes.details}>\n          <Grid container xs={12}>\n            <Grid container item xs={12} lg={4}>\n              <div className={classes.column} />\n            </Grid>\n            <Grid container item xs={12} lg={4}>\n              <div className={classes.column}>\n                <Chip label=\"Earnings calls\" onDelete={() => { }} />\n                <Chip label=\"News\" onDelete={() => { }} />\n              </div>\n            </Grid>\n            <Grid container item xs={12} lg={4}>\n              <div className={classes.columns}>\n                <RangedDatePicker />\n                <Divider />\n                <AccordionActions>\n                  <Button size=\"small\">Cancel</Button>\n                  <Button size=\"small\" color=\"primary\" onClick={onSearch}>\n                    Search\n              </Button>\n                </AccordionActions>\n              </div>\n            </Grid>\n          </Grid>\n\n\n          {/* <div className={clsx(classes.column, classes.helper)}>\n            <Typography variant=\"caption\">\n              Select event type to filter\n              <br />\n              <a href=\"#secondary-heading-and-columns\" className={classes.link}>\n                Learn more\n              </a>\n            </Typography>\n          </div> */}\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n}","/Users/tblake/Documents/earney/react_dashboard/src/components/RangedDatePicker.js",[],"/Users/tblake/Documents/earney/react_dashboard/src/panels/optionsDiscoveryPanel.js",["94","95","96","97"],"/Users/tblake/Documents/earney/react_dashboard/src/components/MultipleSelect.js",["98","99","100","101","102"],"/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/index.js",[],["103","104"],"/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/reportWebVitals.js",[],"/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/App.js",[],"/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/panels/homePagePanel.js",[],"/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/panels/powerFrequencyPanel.js",["105","106","107"],"import React, { PureComponent } from 'react';\nimport moment from 'moment';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend\n} from 'recharts';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport { getSocket } from '../utils/socketio';\n\n\n// replace the chart with this zoomable one from recharts\n// https://codesandbox.io/s/l4pq6x00xq?file=/src/Hello.js\n\nexport default class PowerFrequencyPanel extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            formattedData: [],\n            subscription: {\n                command: 'frequency',\n                arguments: {\n                }\n            },\n        };\n\n        this.onOpen = this.onOpen.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.getChartLines = this.getChartLines.bind(this);\n        this.getFormattedData = this.getFormattedData.bind(this);\n    }\n\n    componentDidMount() {\n        this.ws = getSocket(this.state.subscription.command);\n        this.ws.onopen = this.onOpen;\n        this.ws.onclose = this.onClose;\n        this.ws.onmessage = this.onMessage;\n    }\n\n    onOpen(event) {\n        console.log('socket opened', event);\n        this.ws.send(JSON.stringify(this.state.subscription));\n    }\n\n    onMessage(event) {\n        const data = JSON.parse(event.data);\n        console.log('socket received data', data);\n\n        this.setState({ data }, this.getFormattedData());\n    }\n\n    onClose(event) {\n        console.log('socket closed', event);\n    }\n\n    getFormattedData() {\n        // const historyByDate = this.state.data.reduce((acc, curr) => {\n        //     // this.state.fields.forEach(f => {\n        //     if ('symbol' in curr)\n        //         acc[curr['date']] = {\n        //             [`${this.state.selectedField}_${curr['symbol'].toLowerCase()}`]: curr[this.state.selectedField],\n        //             ...acc[curr['date']]\n        //         };\n        //     // });\n\n        //     return acc;\n        // }, {});\n\n        // const formattedData = Object.keys(historyByDate).map(k => {\n        //     return { date: k, ...historyByDate[k] };\n        // });\n        const formattedData = this.state.data;\n\n        console.log({ formattedData });\n        this.setState({ formattedData });\n    }\n\n    getChartLines() {\n        return <Line\n            type=\"monotone\"\n            name='amplitude'\n            dot={false}\n            dataKey=\"amplitude\"\n            key='amplitude'\n        />;\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    !this.state.data.length\n                        ? <div>no data found</div>\n                        :\n                        <div style={{ textAlign: 'center' }}>\n                            <LineChart\n                                width={600}\n                                height={350}\n                                data={this.state.formattedData}\n                                margin={{\n                                    top: 0, right: 0, left: 0, bottom: 0,\n                                }}\n                            >\n                                <CartesianGrid strokeDasharray=\"1 1\" />\n                                <XAxis dataKey=\"power\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                {this.getChartLines()}\n                            </LineChart>\n                        </div>\n\n                }\n            </div>\n        );\n    }\n}\n","/Users/tblake/Documents/lifx_audio_visualizer/dashboard/src/utils/socketio.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":36,"nodeType":"114","messageId":"115","endLine":3,"endColumn":45},{"ruleId":"112","severity":1,"message":"116","line":34,"column":27,"nodeType":"114","messageId":"115","endLine":34,"endColumn":45},{"ruleId":"112","severity":1,"message":"117","line":20,"column":8,"nodeType":"114","messageId":"115","endLine":20,"endColumn":24},{"ruleId":"112","severity":1,"message":"118","line":21,"column":8,"nodeType":"114","messageId":"115","endLine":21,"endColumn":14},{"ruleId":"112","severity":1,"message":"119","line":222,"column":12,"nodeType":"114","messageId":"115","endLine":222,"endColumn":19},{"ruleId":"112","severity":1,"message":"120","line":223,"column":26,"nodeType":"114","messageId":"115","endLine":223,"endColumn":41},{"ruleId":"112","severity":1,"message":"121","line":308,"column":11,"nodeType":"114","messageId":"115","endLine":308,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":345,"column":90,"nodeType":"124","messageId":"125","endLine":345,"endColumn":92},{"ruleId":"112","severity":1,"message":"126","line":11,"column":19,"nodeType":"114","messageId":"115","endLine":11,"endColumn":29},{"ruleId":"112","severity":1,"message":"127","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":12},{"ruleId":"112","severity":1,"message":"127","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":12},{"ruleId":"112","severity":1,"message":"128","line":13,"column":8,"nodeType":"114","messageId":"115","endLine":13,"endColumn":15},{"ruleId":"112","severity":1,"message":"129","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":24},{"ruleId":"112","severity":1,"message":"130","line":57,"column":9,"nodeType":"114","messageId":"115","endLine":57,"endColumn":17},{"ruleId":"112","severity":1,"message":"127","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":12},{"ruleId":"112","severity":1,"message":"131","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":18},{"ruleId":"112","severity":1,"message":"132","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":20},{"ruleId":"112","severity":1,"message":"133","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":16},{"ruleId":"112","severity":1,"message":"134","line":66,"column":11,"nodeType":"114","messageId":"115","endLine":66,"endColumn":31},{"ruleId":"108","replacedBy":"135"},{"ruleId":"110","replacedBy":"136"},{"ruleId":"112","severity":1,"message":"137","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"138","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":20},{"ruleId":"112","severity":1,"message":"139","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":25},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'InputBase' is defined but never used.","Identifier","unusedVar","'setFilteredTickers' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'columns' is assigned a value but never used.","'setSubscription' is assigned a value but never used.","'handleChangeDense' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setTickers' is assigned a value but never used.","'clsx' is defined but never used.","'Divider' is defined but never used.","'RangedDatePicker' is defined but never used.","'onSearch' is assigned a value but never used.","'InputLabel' is defined but never used.","'ListItemText' is defined but never used.","'Checkbox' is defined but never used.","'handleChangeMultiple' is assigned a value but never used.",["140"],["141"],"'moment' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]